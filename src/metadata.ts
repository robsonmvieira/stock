/* eslint-disable */
export default async () => {
    const t = {
        ["./modules/core/domain/valueObject/email.vo"]: await import("./modules/core/domain/valueObject/email.vo"),
        ["./modules/rh/modules/employee/domain/valueObjects/cpf.vo"]: await import("./modules/rh/modules/employee/domain/valueObjects/cpf.vo"),
        ["./modules/rh/modules/employee/domain/enums/departaments.enum"]: await import("./modules/rh/modules/employee/domain/enums/departaments.enum"),
        ["./modules/rh/modules/job/domain/valueObject/job-position.uuid"]: await import("./modules/rh/modules/job/domain/valueObject/job-position.uuid"),
        ["./modules/logistic/modules/supplier/domain/valueObjects/document.vo"]: await import("./modules/logistic/modules/supplier/domain/valueObjects/document.vo"),
        ["./modules/logistic/modules/supplier/domain/valueObjects/address.vo"]: await import("./modules/logistic/modules/supplier/domain/valueObjects/address.vo"),
        ["./modules/logistic/modules/supplier/application/use-cases/create-supplier-use-case/dto/create-supplier.dto.props"]: await import("./modules/logistic/modules/supplier/application/use-cases/create-supplier-use-case/dto/create-supplier.dto.props"),
        ["./modules/logistic/modules/product/domain/enum/product-status.enum"]: await import("./modules/logistic/modules/product/domain/enum/product-status.enum")
    };
    return { "@nestjs/swagger": { "models": [[import("./modules/session/application/usecases/login/dto/login.dto"), { "LoginDtoProps": { email: { required: true, type: () => String }, password: { required: true, type: () => String } }, "LoginDto": { email: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./modules/rh/modules/employee/application/use-cases/employee/create-employee/dto/create-employee.dto"), { "CreateEmployeeDto": { firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, phone: { required: true, type: () => String }, hireDate: { required: true, type: () => Date }, gestorId: { required: true, type: () => String }, document: { required: true, type: () => String }, jobPosition: { required: true, type: () => String }, password: { required: true, type: () => String }, credencialNumber: { required: true, type: () => String }, department: { required: true, type: () => String } }, "CreateEmployeeDtoPropsValidator": {} }], [import("./modules/rh/modules/employee/domain/entities/employee.entity"), { "Employee": { firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => t["./modules/core/domain/valueObject/email.vo"].EmailVO }, phone: { required: true, type: () => String }, hireDate: { required: true, type: () => Date }, credencialNumber: { required: true, type: () => String }, gestorId: { required: true, type: () => String }, document: { required: true, type: () => t["./modules/rh/modules/employee/domain/valueObjects/cpf.vo"].CPFVO }, jobPosition: { required: true, type: () => String }, vacationDays: { required: false, type: () => Number }, vacationDaysUsed: { required: false, type: () => Number }, vacationDaysRemaining: { required: false, type: () => Number }, vactionInUsed: { required: false, type: () => Boolean }, fireDate: { required: false, type: () => Date }, password: { required: true, type: () => String }, initialPassword: { required: true, type: () => String, nullable: true }, userChangePassword: { required: true, type: () => Boolean }, isManager: { required: true, type: () => Boolean }, department: { required: false, enum: t["./modules/rh/modules/employee/domain/enums/departaments.enum"].DepartamentsEnum } } }], [import("./modules/rh/modules/job/domain/entities/job-position.entity"), { "JobPosition": { job_position_id: { required: true, type: () => t["./modules/rh/modules/job/domain/valueObject/job-position.uuid"].JobPositionId }, title: { required: true, type: () => String }, description: { required: false, type: () => String } } }], [import("./modules/logistic/modules/supplier/domain/entities/supplier.entity"), { "Supplier": { name: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => t["./modules/core/domain/valueObject/email.vo"].EmailVO }, phone: { required: true, type: () => String }, isActive: { required: false, type: () => Boolean }, document: { required: true, type: () => t["./modules/logistic/modules/supplier/domain/valueObjects/document.vo"].CNPJVO }, addresses: { required: true, type: () => [t["./modules/logistic/modules/supplier/domain/valueObjects/address.vo"].AddressVO] }, products: { required: false, type: () => [String] } } }], [import("./modules/logistic/modules/supplier/application/use-cases/create-supplier-use-case/dto/create-supplier.dto"), { "CreateSupplierDto": { name: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, phone: { required: true, type: () => String }, document: { required: true, type: () => String }, addresses: { required: true, type: () => [t["./modules/logistic/modules/supplier/application/use-cases/create-supplier-use-case/dto/create-supplier.dto.props"].CreateSupplierAddressesDtoProps] } }, "CreateSupplierDtoPropsValidator": {} }], [import("./modules/logistic/modules/product/domain/entities/product.entity"), { "Product": { _name: { required: true, type: () => String }, _invoiceNumber: { required: true, type: () => String }, _description: { required: true, type: () => String }, _details: { required: true, type: () => String }, _price: { required: true, type: () => Number }, _stockQuantity: { required: true, type: () => Number }, _blockedQuantity: { required: true, type: () => Number }, _supplierId: { required: true, type: () => String }, _sku: { required: true, type: () => String }, _images: { required: true, type: () => [String] }, _discountedPrice: { required: false, type: () => Number }, _unitPrice: { required: true, type: () => Number }, _totalAmount: { required: false, type: () => Number }, _status: { required: true, enum: t["./modules/logistic/modules/product/domain/enum/product-status.enum"].ProductStatus }, _categoryId: { required: true, type: () => String }, _ratings: { required: true, type: () => Number }, _reviewsCount: { required: true, type: () => Number }, _totalSalesValue: { required: false, type: () => Number }, _totalUnitsSold: { required: false, type: () => Number }, _complaintsCount: { required: false, type: () => Number }, _blockForSaleQuantity: { required: false, type: () => Number }, _minimalInStockQuantityPermited: { required: false, type: () => Number } } }], [import("./modules/logistic/modules/product/domain/entities/category.entity"), { "Category": { name: { required: true, type: () => String }, description: { required: false, type: () => String }, products: { required: true, type: () => [String] } } }], [import("./modules/logistic/modules/product/application/use-cases/product/create-product-use-case/dto/create-product.dto"), { "CreateProductDto": { name: { required: true, type: () => String }, price: { required: true, type: () => Number }, description: { required: true, type: () => String }, details: { required: true, type: () => String }, stockQuantity: { required: true, type: () => Number }, invoiceNumber: { required: true, type: () => String }, images: { required: true, type: () => [String] }, status: { required: true, enum: t["./modules/logistic/modules/product/domain/enum/product-status.enum"].ProductStatus }, supplierId: { required: true, type: () => String }, categoryId: { required: true, type: () => String } }, "CreateProductDtoPropsValidator": {} }]], "controllers": [[import("./modules/session/application/controllers/session.controller"), { "SessionController": { "login": {} } }], [import("./modules/rh/modules/employee/application/controllers/employee.controller"), { "EmployeeController": { "create": {}, "getInfo": {}, "notifications": { type: Object } } }], [import("./modules/rh/modules/job/application/controllers/job-position/job-position.controller"), { "JobPositionController": { "list": {}, "create": {} } }], [import("./modules/logistic/modules/supplier/application/controllers/supplier/supplier.controller"), { "SupplierController": { "create": {}, "list": {} } }], [import("./modules/logistic/modules/product/application/controllers/category/category.controller"), { "CategoryController": { "create": {}, "list": {} } }], [import("./modules/logistic/modules/product/application/controllers/product/product/product.controller"), { "ProductController": { "create": {}, "blockeProduct": {} } }], [import("./modules/data-generate/dumb-data-controller/dumb-data-controller.controller"), { "DumbDataController": { "generate": {} } }]] } };
};